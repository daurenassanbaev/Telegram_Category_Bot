package telegram.bot.telegram_tt.bot;

import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Value;
import org.telegram.telegrambots.bots.TelegramLongPollingBot;
import org.telegram.telegrambots.meta.api.methods.GetFile;
import org.telegram.telegrambots.meta.api.methods.send.SendDocument;
import org.telegram.telegrambots.meta.api.methods.send.SendMessage;
import org.telegram.telegrambots.meta.api.methods.send.SendPhoto;
import org.telegram.telegrambots.meta.api.objects.File;
import org.telegram.telegrambots.meta.api.objects.InputFile;
import org.telegram.telegrambots.meta.api.objects.Message;
import org.telegram.telegrambots.meta.api.objects.Update;
import org.telegram.telegrambots.meta.exceptions.TelegramApiException;
import telegram.bot.telegram_tt.command.*;
import telegram.bot.telegram_tt.service.CategoryDownloadService;
import telegram.bot.telegram_tt.service.CategoryUploadService;

import java.io.IOException;
import java.io.InputStream;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Set;

/**
 * –ë–æ—Ç Telegram –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–µ—Ä–µ–≤—å—è–º–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
 * –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ, –ø—Ä–æ—Å–º–æ—Ç—Ä, —É–¥–∞–ª–µ–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ –∑–∞–≥—Ä—É–∑–∫—É/–≤—ã–≥—Ä—É–∑–∫—É –¥–µ—Ä–µ–≤—å–µ–≤ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
 */
@Slf4j
public class TelegramBot extends TelegramLongPollingBot {

    private final String botName;
    private final Map<String, Command> commands = new HashMap<>();

    private static final String RULES = """
            –ö–æ–º–∞–Ω–¥—ã:
            
            1) /viewTree - üìú –ü–æ–∫–∞–∑–∞—Ç—å —Ç–µ–∫—É—â–µ–µ –¥–µ—Ä–µ–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π –≤ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.
            
            2) /addElement <–Ω–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞> - ‚ûï –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç –∫–∞–∫ –∫–æ—Ä–Ω–µ–≤–æ–π, –µ—Å–ª–∏ —É –Ω–µ–≥–æ –Ω–µ—Ç —Ä–æ–¥–∏—Ç–µ–ª—è.
            
            3) /addElement <—Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π —ç–ª–µ–º–µ–Ω—Ç> <–¥–æ—á–µ—Ä–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç> - ‚ûï –î–æ–±–∞–≤–∏—Ç—å –¥–æ—á–µ—Ä–Ω–∏–π —ç–ª–µ–º–µ–Ω—Ç –∫ —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–º—É —Ä–æ–¥–∏—Ç–µ–ª—é. –ï—Å–ª–∏ —Ä–æ–¥–∏—Ç–µ–ª—è –Ω–µ—Ç, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
            
            4) /removeElement <–Ω–∞–∑–≤–∞–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç–∞> - üóëÔ∏è –£–¥–∞–ª–∏—Ç—å —É–∫–∞–∑–∞–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –∏ –≤—Å–µ –µ–≥–æ –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã. –ï—Å–ª–∏ —ç–ª–µ–º–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω, –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ.
            
            5) /help - ‚ÑπÔ∏è –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ –∏ –∏—Ö –æ–ø–∏—Å–∞–Ω–∏–µ.
            
            6) /download - üì• –°–∫–∞—á–∞—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç Excel —Å –¥–µ—Ä–µ–≤–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
            
            7) /upload - üì§ –ó–∞–≥—Ä—É–∑–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç Excel —Å –¥–µ—Ä–µ–≤–æ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–π –∏ —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö.
            """;

    private static final String START_MESSAGE = """
            –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ Category Bot! üëã
            –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–∑–≤–æ–ª—è–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å, –ø—Ä–æ—Å–º–∞—Ç—Ä–∏–≤–∞—Ç—å –∏ —É–¥–∞–ª—è—Ç—å –¥–µ—Ä–µ–≤–æ –∫–∞—Ç–µ–≥–æ—Ä–∏–π.
            –ù–∞–ø–∏—à–∏—Ç–µ "/help", —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å, –∫–∞–∫–∏–µ –∫–æ–º–∞–Ω–¥—ã –¥–æ—Å—Ç—É–ø–Ω—ã.
            """;

    private static final String UNKNOWN_COMMAND = "‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ù–∞–ø–∏—à–∏—Ç–µ /help, —á—Ç–æ–±—ã —É–≤–∏–¥–µ—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã.";

    private static final String UPLOAD_MESSAGE = """
            ‚ö†Ô∏è –ü—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —É–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –æ–±—ä–µ–∫—Ç—ã —É–Ω–∏–∫–∞–ª—å–Ω—ã. –í –∫–æ–ª–æ–Ω–∫–µ "–ö–∞—Ç–µ–≥–æ—Ä–∏—è" –Ω–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –¥—É–±–ª–∏–∫–∞—Ç–æ–≤. –§–æ—Ä–º–∞—Ç –ª–∏—Å—Ç–∞ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å, –∫–∞–∫ –Ω–∞ —Ñ–æ—Ç–∫–∞—Ö.(2 —Ñ–æ—Ç–æ –æ–∑–Ω–∞—á–∞–µ—Ç, —á—Ç–æ –∏–º—è —Ç–∞–±–ª–∏—Ü—ã –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å "Category Tree") :
            
            "-" - –æ–∑–Ω–∞—á–∞–µ—Ç –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.
            
            –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à —Ñ–∞–π–ª, —è —Å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ–º –æ–±—Ä–∞–±–æ—Ç–∞—é –µ–≥–æ üòä
            """;
    @Value("${images.first}")
    private String PHOTO_PATH;
    @Value("${images.second}")
    private String PHOTO_PATH_1;
    private final Set<Long> waiting = new HashSet<>();

    public TelegramBot(String botName, String token, AddCategoryCommand addCategoryCommand, ViewCategoryCommand viewCategoryCommand, RemoveCategoryCommand removeCategoryCommand, UploadCommand uploadCommand, DownloadCommand downloadCommand, CategoryDownloadService categoryDownloadService, CategoryUploadService categoryUploadService) {
        super(token);
        this.botName = botName;
        commands.put("/addElement", addCategoryCommand);
        commands.put("/viewTree", viewCategoryCommand);
        commands.put("/removeElement", removeCategoryCommand);
        commands.put("/download", downloadCommand);
        commands.put("/upload", uploadCommand);
    }

    @Override
    public void onUpdateReceived(Update update) {
        if (update.hasMessage()) {
            Message message = update.getMessage();
            long chatId = message.getChatId();
            if (message.hasText()) {
                String messageText = message.getText();
                String response = "";
                // –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –∫–æ–º–∞–Ω–¥—É help
                if (messageText.equals("/help")) {
                    response = RULES;
                } else if (messageText.equals("/start")) {
                    response = START_MESSAGE;
                } else if (messageText.equals("/upload")) {
                    response = UPLOAD_MESSAGE;
                    waiting.add(chatId); // –û–∂–∏–¥–∞–µ–º –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
                } else {
                    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥—Ä—É–≥–∏—Ö –∫–æ–º–∞–Ω–¥
                    Object responseObject = handleCommand(messageText, chatId);
                    if (responseObject instanceof SendDocument) {
                        try {
                            execute((SendDocument) responseObject);
                            return;
                        } catch (TelegramApiException e) {
                            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞: ", e);
                            response = "–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –¥–æ–∫—É–º–µ–Ω—Ç–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
                        }
                    } else {
                        response = (String) responseObject;
                    }
                }
                sendMessage(chatId, response);
            } else if (update.getMessage().hasDocument() && waiting.contains(chatId)) {
                waiting.remove(chatId); // –£–±–∏—Ä–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ —Å–ø–∏—Å–∫–∞ –æ–∂–∏–¥–∞–Ω–∏—è
                String fileId = message.getDocument().getFileId();
                GetFile getFileMethod = new GetFile(fileId);
                try {
                    File file = execute(getFileMethod);
                    if (checkUploadFileFormat(file.getFilePath())) {
                        InputStream inputStream = downloadFileAsStream(file);
                        Command uploadCommand = commands.get("/upload");
                        if (uploadCommand instanceof FileCommand) {
                            String response = ((FileCommand) uploadCommand).executeFile(inputStream, chatId);
                            inputStream.close();
                            sendMessage(chatId, response);
                        } else {
                            sendMessage(chatId, "–ö–æ–º–∞–Ω–¥–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∞ –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ.");
                        }
                    } else {
                        sendMessage(chatId, "–û—à–∏–±–∫–∞: –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∑–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª –≤ —Ñ–æ—Ä–º–∞—Ç–µ Excel (.xls –∏–ª–∏ .xlsx).");
                    }

                } catch (TelegramApiException | IOException e) {
                    log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–ª–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞", e);
                    sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Ñ–∞–π–ª–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
                }
            } else {
                sendMessage(chatId, "–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –°–ø–∏—Å–æ–∫ –∫–æ–º–º–∞–Ω–¥ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É /help");
            }
        }
    }

    private boolean checkUploadFileFormat(String filePath) {
        if (filePath != null && (filePath.endsWith(".xls") || filePath.endsWith(".xlsx"))) {
            return true;
        }
        return false;
    }


    /**
     * –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Ö–æ–¥—è—â—É—é –∫–æ–º–∞–Ω–¥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –∫–∞—Ä—Ç—ã –∫–æ–º–∞–Ω–¥.
     *
     * @param messageText —Ç–µ–∫—Å—Ç –∫–æ–º–∞–Ω–¥—ã
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @return –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
     */
    private Object handleCommand(String messageText, Long chatId) {
        for (String commandKey : commands.keySet()) {
            if (messageText.startsWith(commandKey)) {
                try {
                    Object forReturn = commands.get(commandKey).execute(messageText, chatId);
                    if (forReturn instanceof SendDocument) {
                        SendDocument sendDocument = (SendDocument) forReturn;
                        return sendDocument;
                    }
                    return forReturn.toString();
                } catch (Exception e) {
                    log.error("–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã: ", e);
                    return "–û—à–∏–±–∫–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∫–æ–º–∞–Ω–¥—ã. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.";
                }
            }
        }
        return UNKNOWN_COMMAND;
    }



    /**
     * –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–π —á–∞—Ç.
     *
     * @param chatId –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä —á–∞—Ç–∞
     * @param text —Ç–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
     */
    private void sendMessage(long chatId, String text) {
        SendMessage message = new SendMessage();
        message.setChatId(String.valueOf(chatId));
        message.setText(text);
        try {
            if (text.equals(UPLOAD_MESSAGE)) {
                sendPhoto(chatId, PHOTO_PATH); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–æ—Ç–æ –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏
                sendPhoto(chatId, PHOTO_PATH_1);
            }
            execute(message); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: ", e);
            // –ï—Å–ª–∏ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ç–µ–∫—Å—Ç —Å –æ—à–∏–±–∫–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            sendMessage(chatId, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.");
        }
    }
    private void sendPhoto(long chatId, String photoPath) {
        SendPhoto sendPhoto = new SendPhoto();
        sendPhoto.setChatId(chatId);
        sendPhoto.setPhoto(new InputFile(new java.io.File(photoPath)));
        try {
            execute(sendPhoto);
        } catch (TelegramApiException e) {
            log.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ: ", e);
            throw new RuntimeException("–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Ñ–æ—Ç–æ.");
        }
    }


    @Override
    public String getBotUsername() {
        return this.botName;
    }
}
